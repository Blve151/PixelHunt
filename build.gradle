buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// We use the version format MCVERSION-MAJOR.MINOR.PATCH
version = modMinecraftVersion + "-" + modVersion
group = modGroup
archivesBaseName = modFileName

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: modMcpMappingsChannel, version: modMcpMappingsVersion

    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    jcenter()
    ivy {
        url "https://download.nodecdn.net/containers/reforged/server/release"
        metadataSources {
            artifact()
        }
        patternLayout {
            artifact "[revision]/[artifact].[ext]"
        }
        maven { url "https://jitpack.io" }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:" + modMinecraftVersion + "-" + modForgeVersion
    implementation "pixelmon:Pixelmon-1.12.2-8.1.2-server:8.1.2"
    implementation 'com.github.landonjw:GooeyLibs:v2.0.3'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : modId,
                "Specification-Vendor"    : modGroup,
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : modVersion,
                "Implementation-Vendor"   : modGroup,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

processResources{
    // This will ensure that this task is redone when the versions change.
    inputs.property 'version', modVersion

    // Replace stuff in mods.toml, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'

        // Replace version
        expand 'version': modVersion, 'modId': modId, 'displayName': modFileName
    }

    // Copy everything else except the mods.toml
    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}